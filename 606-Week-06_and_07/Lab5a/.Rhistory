def_q <- 1-def_p
## 4.a P(n=10)
((def_q)^(10-1))*def_p
## 4.b P(n=101)
((def_q)^(101-1))*def_p
## 4.c mean and sd
mean <- 1/def_p
sd <- sqrt((1-def_p)/(def_q)^2)
mean; sd
## set the basic variables for this set of problems
def_p <- 0.02
def_q <- 1-def_p
## 4.a P(n=10)
((def_q)^(10-1))*def_p
## 4.b P(n=101)
((def_q)^(101-1))*def_p
## 4.c mean and sd
mean <- 1/def_p
sd <- sqrt((def_q)/(def_p)^2)
mean; sd
## So on average, you would expect 50 transistors to be produced before
## on had a defect. The standard deviation is 1.01.
## set the basic variables for this set of problems
def_p <- 0.02
def_q <- 1-def_p
## 4.a P(n=10)
((def_q)^(10-1))*def_p
## 4.b P(n=101)
((def_q)^(101-1))*def_p
## 4.c mean and sd
mean <- 1/def_p
sd <- sqrt((def_q)/((def_p)^2))
mean; sd
## So on average, you would expect 50 transistors to be produced before
## on had a defect. The standard deviation is 1.01.
## set the basic variables for this set of problems
def_p <- 0.02
def_q <- 1-def_p
## 4.a P(n=10)
((def_q)^(10-1))*def_p
## 4.b P(n=101)
((def_q)^(101-1))*def_p
## 4.c mean and sd
mean <- 1/def_p
sd <- sqrt((def_q)/((def_p)^2))
mean; sd
## So on average, you would expect 50 transistors to be produced before
## one had a defect. The standard deviation is 49.50.
## 4.d defective rate 0.05
mean2 <- 1/0.05
sd2 <- sqrt((1-0.05)/(0.05^2))
mean; sd
## set the basic variables for this set of problems
def_p <- 0.02
def_q <- 1-def_p
## 4.a P(n=10)
((def_q)^(10-1))*def_p
## 4.b P(n=101)
((def_q)^(101-1))*def_p
## 4.c mean and sd
mean <- 1/def_p
sd <- sqrt((def_q)/((def_p)^2))
mean2; sd2
## So on average, you would expect 50 transistors to be produced before
## one had a defect. The standard deviation is 49.50.
## 4.d defective rate 0.05
mean2 <- 1/0.05
sd2 <- sqrt((1-0.05)/(0.05^2))
mean; sd
## set the basic variables for this set of problems
def_p <- 0.02
def_q <- 1-def_p
## 4.a P(n=10)
((def_q)^(10-1))*def_p
## 4.b P(n=101)
((def_q)^(101-1))*def_p
## 4.c mean and sd
mean <- 1/def_p
sd <- sqrt((def_q)/((def_p)^2))
mean; sd
## So on average, you would expect 50 transistors to be produced before
## one had a defect. The standard deviation is 49.50.
## 4.d defective rate 0.05
mean2 <- 1/0.05
sd2 <- sqrt((1-0.05)/(0.05^2))
mean2; sd2
3!
factorial(3)
factorial(4)
##  5.a
(factorial(3) / factorial(2)*factorial(3-2)) * (0.51^2) * (1-0.51)^(3-2)
##  5.a
(factorial(3) / factorial(2)*factorial(3-2)) * (0.51^2) * (1-0.51)^(3-2)
##  5.b
##    m-m-f
##    m-f-m
##    f-m-m
0.51*0.51*(1-0.51) + 0.51*(1-0.51)*0.51 + (1-0.51)*0.51*0.51
##  5.a
(factorial(3) / factorial(2)*factorial(3-2)) * (0.51^2) * (1-0.51)^(3-2)
##  5.b
##    m-m-f
##    m-f-m
##    f-m-m
0.51*0.51*(1-0.51) + 0.51*(1-0.51)*0.51 + (1-0.51)*0.51*0.51
##    Yes, both methods show a probability of 0.3823
##  5.c
factorial(8) / factorial(3)*factor(8-3)
##  5.a
(factorial(3) / factorial(2)*factorial(3-2)) * (0.51^2) * (1-0.51)^(3-2)
##  5.b
##    m-m-f
##    m-f-m
##    f-m-m
0.51*0.51*(1-0.51) + 0.51*(1-0.51)*0.51 + (1-0.51)*0.51*0.51
##    Yes, both methods show a probability of 0.3823
##  5.c
factorial(8) / factorial(3)*factorial(8-3)
##  5.a
(factorial(3) / factorial(2)*factorial(3-2)) * (0.51^2) * (1-0.51)^(3-2)
##  5.b
##    m-m-f
##    m-f-m
##    f-m-m
0.51*0.51*(1-0.51) + 0.51*(1-0.51)*0.51 + (1-0.51)*0.51*0.51
##    Yes, both methods show a probability of 0.3823
##  5.c
factorial(8) / (factorial(3)*factorial(8-3))
##  5.a
(factorial(3) / (factorial(2)*factorial(3-2))) * (0.51^2) * (1-0.51)^(3-2)
##  5.b
##    m-m-f
##    m-f-m
##    f-m-m
0.51*0.51*(1-0.51) + 0.51*(1-0.51)*0.51 + (1-0.51)*0.51*0.51
##    Yes, both methods show a probability of 0.3823
##  5.c
factorial(8) / (factorial(3)*factorial(8-3))
##  5.a
(factorial(3) / (factorial(2)*factorial(3-2))) * (0.51^2) * (1-0.51)^(3-2)
##  5.b
##    m-m-f
##    m-f-m
##    f-m-m
0.51*0.51*(1-0.51) + 0.51*(1-0.51)*0.51 + (1-0.51)*0.51*0.51
##    Yes, both methods show a probability of 0.3823
##  5.c
factorial(8) / (factorial(3)*factorial(8-3))
##  6.a
comb <- (factorial(10-1) / (factorial(3-1)*factorial(10-3)))
comb * (.15)^3 * (1-0.15)^(10-3)
getwd()
setwd("C:/Users/cbailey/Desktop/CUNY MSDS/606 Statistics and Probability/Week 06 & 07 - Foundations for Inference/Lab5a")
getwd()
startlab("Lab5a")
startLab("Lab5a")
lirbary(Data606)
library(DATA606)
startLab('Lab5a')
setwd("C:/Users/cbailey/Desktop/CUNY MSDS/606 Statistics and Probability/Week 06 & 07 - Foundations for Inference/Lab5a")
getwd()
load("more/ames.RData")
load("more/ames.RData")
area <- ames$Gr.Liv.Area
price <- ames$SalePrice
summary(area)
hist(area)
samp1 <- sample(area, 50)
summary(sampl)
summary(sampl)
samp1 <- sample(area, 50)
summary(samp1)
hist(samp1)
mean(samp1)
## Student response to exercise 2
## get summary and histogram of samp1
set.seed(1); summary(samp1); hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
## Student response to exercise 2
## get summary and histogram of samp1
set.seed(1); summary(samp1); hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
## Student response to exercise 2
## get summary and histogram of samp1
set.seed(1); summary(samp1); hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
## Student response to exercise 2
## get summary and histogram of samp1
set.seed(1); summary(samp1); hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(1); samp1 <- sample(area, 50)
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(1); samp1 <- sample(area, 50)
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(1); samp1 <- sample(area, 50)
samp1
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(1); samp1 <- sample(area, 50)
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(1); samp1 <- sample(area, 50)
set.seed(2); samp1 <- sample(area, 50)
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(1); samp1 <- sample(area, 50)
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(100); samp1 <- sample(area, 50)
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(5); samp1 <- sample(area, 50)
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(10); samp1 <- sample(area, 50)
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(2); samp1 <- sample(area, 50)
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
set.seed(51); samp1 <- sample(area, 50)
## Student response to exercise 2
## get summary and histogram of samp1
summary(samp1)
hist(samp1)
## The sample 1 distribution of the 'area' variable is unimodal with a right skew.
mean(samp1)
## Student response to exercise 3
set.seed(52); samp2 <- sample(area, 50)
## Student response to exercise 3
set.seed(52); samp2 <- sample(area, 50)
mean(samp2)
mean(samp1)
mean(area)
## Student response to exercise 3
set.seed(52); samp2 <- sample(area, 50)
mean(samp2)
mean(samp1)
mean(samp2) - mean(samp1)
mean(area)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
hist(sample_means50, breaks = 25)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
set.seed(i); samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
set.seed(i); samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
hist(sample_means50, breaks = 25)
hist(sample_means50, breaks = 25)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
set.seed(i); samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
hist(sample_means50, breaks = 25)
summary(sample_means50)
sample_means50 <- rep(NA, 50000)
for(i in 1:5000){
set.seed(i); samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
hist(sample_means50, breaks = 25)
summary(sample_means50)
sample_means50 <- rep(NA, 50000)
for(i in 1:50000){
set.seed(i); samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
hist(sample_means50, breaks = 25)
summary(sample_means50)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
set.seed(i); samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
hist(sample_means50, breaks = 25)
summary(sample_means50)
## Student response to exercise 5
## run a smaller for loop
sample_means_small <- rep(0, 100)
## Student response to exercise 5
## run a smaller for loop
sample_means_small <- rep(0, 100)
for(i in 1:100){
set.seed(i); sample_means_small[i] <- sample(area, 50)
}
sample_means_small
rep(0, 100)
## Student response to exercise 5
## run a smaller for loop
sample_means_small <- rep(0, 100)
for(i in 1:100){
samp <- sample(area, 50)
set.seed(i); sample_means_small[i] <- mean(samp)
}
sample_means_small
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
##print(i)
}
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
##print(i)
}
hist(sample_means50)
sample_means10 <- rep(NA, 5000)
sample_means100 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 10)
sample_means10[i] <- mean(samp)
samp <- sample(area, 100)
sample_means100[i] <- mean(samp)
}
par(mfrow = c(3, 1))
xlimits <- range(sample_means10)
hist(sample_means10, breaks = 20, xlim = xlimits)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means100, breaks = 20, xlim = xlimits)
par(mfrow = c(3, 1))
xlimits <- range(sample_means10)
hist(sample_means10, breaks = 20, xlim = xlimits)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means100, breaks = 20, xlim = xlimits)
hist(area, breaks = 20, xlim = xlimits)
par(mfrow = c(3, 1))
xlimits <- range(sample_means10)
hist(sample_means10, breaks = 20, xlim = xlimits)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means100, breaks = 20, xlim = xlimits)
hist(area, breaks = 20)
par(mfrow = c(3, 1))
xlimits <- range(sample_means10)
hist(sample_means10, breaks = 20, xlim = xlimits)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means100, breaks = 20, xlim = xlimits)
par(mfrow = c(3, 1))
xlimits <- range(sample_means10)
hist(sample_means10, breaks = 20, xlim = xlimits)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means100, breaks = 20, xlim = xlimits)
summary(sample_means10)
summary(sample_means50)
summary(sample_means100)
## Student response to 'On your own 1'
set.seed(1) samp_price <- sample(price, 50)
## Student response to 'On your own 1'
set.seed(1); samp_price <- sample(price, 50)
mean(samp_price)
## Student response to 'On your own 1'
set.seed(1); samp_price <- sample(price, 50)
mean(samp_price)
## Student response to 'On your own 1'
set.seed(1); samp_price <- sample(price, 50)
mean(samp_price)
## Student response to 'On your own 2'
nSamples <- 5000
sampleSize <- 50
sample_means50 <- rep(0, nSamples)
for(i in 1:nSamples){
set.seed(i); samp <- sample(price, sampleSize)
sample_means50[i] <- mean(samp)
}
summary(sample_means50)
hist(sample_means50)
## Student response to 'On your own 2'
nSamples <- 5000
sampleSize <- 50
sample_means50 <- rep(0, nSamples)
for(i in 1:nSamples){
set.seed(i); samp <- sample(price, sampleSize)
sample_means50[i] <- mean(samp)
}
summary(sample_means50)
hist(sample_means50)
mean(price)
## Student response to 'On your own 3'
## set simulation parameters
nSamples <- 5000
sampleSize <- 150
## initialize and population simulation vector
sample_means150 <- rep(0, nSamples)
for(i in 1:nSamples){
set.seed(i); samp <- sample(price, sampleSize)
sample_means150[i] <- mean(samp)
}
par(mfrow = c(2, 1))
xlimits <- range(sample_means50)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means150, breaks = 20, xlim = xlimits)
## Student response to 'On your own 2'
## set simulation parameters
nSamples <- 5000
sampleSize <- 50
## initialize and population simulation vector
sample_means50 <- rep(0, nSamples)
for(i in 1:nSamples){
set.seed(i); samp <- sample(price, sampleSize)
sample_means50[i] <- mean(samp)
}
## describe and plot the similation distribution
summary(sample_means50)
hist(sample_means50)
## Based on the outcomes of the population, an appropriate estimate
## of the population mean would be $180,824
## population mean
mean(price)
## Student response to 'On your own 3'
## set simulation parameters
nSamples <- 5000
sampleSize <- 150
## initialize and population simulation vector
sample_means150 <- rep(0, nSamples)
for(i in 1:nSamples){
set.seed(i); samp <- sample(price, sampleSize)
sample_means150[i] <- mean(samp)
}
par(mfrow = c(2, 1))
xlimits <- range(sample_means50)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means150, breaks = 20, xlim = xlimits)
## Student response to 'On your own 3'
## set simulation parameters
nSamples <- 5000
sampleSize <- 150
## initialize and population simulation vector
sample_means150 <- rep(0, nSamples)
for(i in 1:nSamples){
set.seed(i); samp <- sample(price, sampleSize)
sample_means150[i] <- mean(samp)
}
par(mfrow = c(2, 1))
xlimits <- range(sample_means50)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means150, breaks = 20, xlim = xlimits)
mean(sample_means150)
## The distribution of sample_means150 is unimodal, nearly symmetrical,
## and centered near 180,000. It is very similar to the distribution of
## sample_means50 but it has less spread than sample_means50.
## Based on the
## Student response to 'On your own 3'
## set simulation parameters
nSamples <- 5000
sampleSize <- 150
## initialize and population simulation vector
sample_means150 <- rep(0, nSamples)
for(i in 1:nSamples){
set.seed(i); samp <- sample(price, sampleSize)
sample_means150[i] <- mean(samp)
}
par(mfrow = c(2, 1))
xlimits <- range(sample_means50)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means150, breaks = 20, xlim = xlimits)
mean(sample_means150)
## The distribution of sample_means150 is unimodal, nearly symmetrical,
## and centered near 180,000. It is very similar to the distribution of
## sample_means50 but it has less spread than sample_means50.
## Based on the distribution of sample_means150, a reasonable estimation
## of the population mean for the price of a home in Ames would be
## $180,772.
