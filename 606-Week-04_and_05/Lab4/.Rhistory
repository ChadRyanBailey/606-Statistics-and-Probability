library(dplyr)
library(tidyr)
library(stringr)
repeat.labels <- function(vec)
{
for(i in 1:length(vec))
{
if (vec[i] != "") {tmp <- vec[i]}
if (vec[i] == "" & i != 1) {vec[i] <- tmp}
if (vec[i] == "" & i == 1) {vec[i] <- ""}
next
}
vec
}
fileLocation_1 <- 'C:/Users/cbailey/Desktop/CUNY MSDS/607 Data Aquisition & Management/Week6/dataset1 - Felony Officer Deaths - modified.csv'
dataset1a <- read.table(file = fileLocation_1, header = TRUE, sep = ',', stringsAsFactors =  FALSE)
#get the second table for this dataset
fileLocation_2 <- 'C:/Users/cbailey/Desktop/CUNY MSDS/607 Data Aquisition & Management/Week6/dataset1 - Accidental Officer Deaths - modified.csv'
dataset1b <- read.table(file = fileLocation_2, header = TRUE, sep = ',', stringsAsFactors =  FALSE)
names(dataset1a)
names(dataset1b)
dataset1a <- dataset1a %>% mutate(Death_Type = "Felony")
dataset1b <- dataset1b %>% mutate(Death_Type = "Accidental")
dataset1a <- dataset1a %>%
mutate(Region = ifelse(area %in% c("NORTHEAST"
, "MIDWEST"
, "SOUTH"
, "WEST"
, "PUERTO RICO AND OTHER OUTLYING AREAS"), area, "")) %>%
mutate(Sub_Region = ifelse(area %in% c("New England"
, "Middle Atlantic"
, "East North Central"
, "West North Central"
, "South Atlantic"
, "East South Central"
, "West South Central"
, "Mountain"
, "Pacific")), area, "")) %>%
library(dplyr)
library(tidyr)
library(stringr)
repeat.labels <- function(vec)
{
for(i in 1:length(vec))
{
if (vec[i] != "") {tmp <- vec[i]}
if (vec[i] == "" & i != 1) {vec[i] <- tmp}
if (vec[i] == "" & i == 1) {vec[i] <- ""}
next
}
vec
}
fileLocation_1 <- 'C:/Users/cbailey/Desktop/CUNY MSDS/607 Data Aquisition & Management/Week6/dataset1 - Felony Officer Deaths - modified.csv'
dataset1a <- read.table(file = fileLocation_1, header = TRUE, sep = ',', stringsAsFactors =  FALSE)
#get the second table for this dataset
fileLocation_2 <- 'C:/Users/cbailey/Desktop/CUNY MSDS/607 Data Aquisition & Management/Week6/dataset1 - Accidental Officer Deaths - modified.csv'
dataset1b <- read.table(file = fileLocation_2, header = TRUE, sep = ',', stringsAsFactors =  FALSE)
names(dataset1a)
names(dataset1b)
dataset1a <- dataset1a %>% mutate(Death_Type = "Felony")
dataset1b <- dataset1b %>% mutate(Death_Type = "Accidental")
dataset1a <- dataset1a %>%
mutate(Region = ifelse(area %in% c("NORTHEAST"
, "MIDWEST"
, "SOUTH"
, "WEST"
, "PUERTO RICO AND OTHER OUTLYING AREAS"), area, "")) %>%
mutate(Sub_Region = ifelse(area %in% c("New England"
, "Middle Atlantic"
, "East North Central"
, "West North Central"
, "South Atlantic"
, "East South Central"
, "West South Central"
, "Mountain"
, "Pacific"), area, "")) %>%
mutate(area = ifelse(Region != "", "Region Total", ifelse(Sub_Region != "", "Sub_Region Total", area)))
library(dplyr)
library(tidyr)
library(stringr)
repeat.labels <- function(vec)
{
for(i in 1:length(vec))
{
if (vec[i] != "") {tmp <- vec[i]}
if (vec[i] == "" & i != 1) {vec[i] <- tmp}
if (vec[i] == "" & i == 1) {vec[i] <- ""}
next
}
vec
}
fileLocation_1 <- 'C:/Users/cbailey/Desktop/CUNY MSDS/607 Data Aquisition & Management/Week6/dataset1 - Felony Officer Deaths - modified.csv'
dataset1a <- read.table(file = fileLocation_1, header = TRUE, sep = ',', stringsAsFactors =  FALSE)
#get the second table for this dataset
fileLocation_2 <- 'C:/Users/cbailey/Desktop/CUNY MSDS/607 Data Aquisition & Management/Week6/dataset1 - Accidental Officer Deaths - modified.csv'
dataset1b <- read.table(file = fileLocation_2, header = TRUE, sep = ',', stringsAsFactors =  FALSE)
names(dataset1a)
names(dataset1b)
dataset1a <- dataset1a %>% mutate(Death_Type = "Felony")
dataset1b <- dataset1b %>% mutate(Death_Type = "Accidental")
dataset1a <- dataset1a %>%
mutate(Region = ifelse(Area %in% c("NORTHEAST"
, "MIDWEST"
, "SOUTH"
, "WEST"
, "PUERTO RICO AND OTHER OUTLYING AREAS"), Area, "")) %>%
mutate(Sub_Region = ifelse(Area %in% c("New England"
, "Middle Atlantic"
, "East North Central"
, "West North Central"
, "South Atlantic"
, "East South Central"
, "West South Central"
, "Mountain"
, "Pacific"), Area, "")) %>%
mutate(Area = ifelse(Region != "", "Region Total", ifelse(Sub_Region != "", "Sub_Region Total", Area)))
?gather
library(dplyr)
library(tidyr)
library(stringr)
repeat.labels <- function(vec)
{
tmp <-""
for(i in 1:length(vec))
{
if (vec[i] != "") {tmp <- vec[i]}
if (vec[i] == "" & i != 1) {vec[i] <- tmp}
if (vec[i] == "" & i == 1) {vec[i] <- ""}
next
}
vec
}
fileLocation_1 <- 'C:/Users/cbailey/Desktop/CUNY MSDS/607 Data Aquisition & Management/Week6/dataset1 - Felony Officer Deaths - modified.csv'
dataset1a <- read.table(file = fileLocation_1, header = TRUE, sep = ',', stringsAsFactors =  FALSE)
#get the second table for this dataset
fileLocation_2 <- 'C:/Users/cbailey/Desktop/CUNY MSDS/607 Data Aquisition & Management/Week6/dataset1 - Accidental Officer Deaths - modified.csv'
dataset1b <- read.table(file = fileLocation_2, header = TRUE, sep = ',', stringsAsFactors =  FALSE)
names(dataset1a)
names(dataset1b)
dataset1a <- dataset1a %>% mutate(Death_Type = "Felony")
dataset1b <- dataset1b %>% mutate(Death_Type = "Accidental")
dataset1a <- dataset1a %>%
mutate(Region = ifelse(Area %in% c("NORTHEAST"
, "MIDWEST"
, "SOUTH"
, "WEST"
, "PUERTO RICO AND OTHER OUTLYING AREAS"), Area, "")) %>%
mutate(Sub_Region = ifelse(Area %in% c("New England"
, "Middle Atlantic"
, "East North Central"
, "West North Central"
, "South Atlantic"
, "East South Central"
, "West South Central"
, "Mountain"
, "Pacific"), Area, "")) %>%
mutate(Area = ifelse(Region != "", "Region Total",
ifelse(Sub_Region != "", "Sub_Region Total", Area))) %>%
mutate(Sub_Region = repeat.labels(Sub_Region)) %>%
mutate(Sub_Region = ifelse(Region != "", "Region Total", Sub_Region)) %>%
mutate(Region = repeat.labels(Region)) %>%
mutate(Region = ifelse(Region == "", "Grand Total", Region)) %>%
mutate(Sub_Region = ifelse(Sub_Region == "", "Grand Total", Sub_Region)) %>%
mutate(Area = ifelse(Area == "Number of victim officers", "Grand Total", Area)) %>%
rename(State_Territory = "Area")
dataset1b <- dataset1b %>%
mutate(Region = ifelse(Area %in% c("NORTHEAST"
, "MIDWEST"
, "SOUTH"
, "WEST"
, "PUERTO RICO AND OTHER OUTLYING AREAS"), Area, "")) %>%
mutate(Sub_Region = ifelse(Area %in% c("New England"
, "Middle Atlantic"
, "East North Central"
, "West North Central"
, "South Atlantic"
, "East South Central"
, "West South Central"
, "Mountain"
, "Pacific"), Area, "")) %>%
mutate(Area = ifelse(Region != "", "Region Total",
ifelse(Sub_Region != "", "Sub_Region Total", Area))) %>%
mutate(Sub_Region = repeat.labels(Sub_Region)) %>%
mutate(Sub_Region = ifelse(Region != "", "Region Total", Sub_Region)) %>%
mutate(Region = repeat.labels(Region)) %>%
mutate(Region = ifelse(Region == "", "Grand Total", Region)) %>%
mutate(Sub_Region = ifelse(Sub_Region == "", "Grand Total", Sub_Region)) %>%
mutate(Area = ifelse(Area == "Number of victim officers", "Grand Total", Area)) %>%
rename(State_Territory = "Area")
dataset1 <- union(dataset1a, dataset1b)
dataset1 %>%
group_by(Death_Type) %>%
summarise(n=n())
dataset1 <- dataset1 %>%
#drop total rows
filter(Region != "Grand Total"
& !Sub_Region %in% c("Grand Total", "Region Total")
& !State_Territory %in% c("Grand Total", "Sub_Region Total")) %>%
#drop total column and re-order columns
select(Death_Type
,Region
, Sub_Region
, State_Territory
, X2008
, X2009
, X2010
, X2011
, X2012
, X2013
, X2014
, X2015
, X2016
, X2017
) %>%
arrange(Death_Type, Region, Sub_Region, State_Territory)
names(dataset1) = str_replace_all(names(dataset1), "X", "")
dataset1_tidy <- gather(dataset1, "Year", "N_Deaths", 5:14)
dataset1_tidy <- spread(dataset1_tidy, Death_Type, N_Deaths)
dataset1_tidy <- dataset1_tidy %>%
mutate(Total = Felony + Accidental)
dataset1_tidy %>%
filter(State_Territory == "Michigan") %>%
arrange(Region, Sub_Region, State_Territory)
fileLocation <- 'C:/Users/cbailey/Desktop/CUNY MSDS/607 Data Aquisition & Management/Week6/dataset2 - Race Counts - modified.csv'
dataset2 <- read.table(file = fileLocation, header = TRUE, sep = ',', stringsAsFactors =  FALSE)
names(dataset2)
head(dataset2)
dataset2 <- dataset2 %>%
mutate(Count_of_Races = ifelse(Race %in% c("All races", "One race", "2+ races"), Race, "")) %>%
mutate(Race = ifelse(Count_of_Races != "", "All races", Race)) %>%
mutate(Count_of_Races = repeat.labels(Count_of_Races)) %>%
mutate(Count_of_Races = str_replace_all(Count_of_Races, "2", "Two")) %>%
mutate(Race = str_replace_all(Race, "2", "Two")) %>%
rename(H_L = "Hispanic.or.Latino"
,Pct_of_H_L = "X..of.H.L"
,Pct_H_L_of_US = "X..of.US"
,Not_H_L = "Not.Hispanic.or.Latino"
,Pct_of_Not_H_L = "X..of.Not.H.L"
,Pct_Not_H_L_of_US = "X..of.US.1"
)
dataset2 <- dataset2 %>%
mutate(RaceTotal = H_L + Not_H_L) %>%
mutate(RacePct_ofEth = 100)
#get US grand total to calculate RaceTotal Pct of US
us_gt <-as.numeric(dataset2 %>%
filter(Count_of_Races == "All races") %>%
select(RaceTotal))
dataset2 <- dataset2 %>%
mutate(RacePct_ofUS = round(RaceTotal/us_gt*100, 2))
#get just Hispanic records
eth_Hispanic <- dataset2 %>%
select(Count_of_Races ,Race ,H_L ,Pct_of_H_L ,Pct_H_L_of_US) %>%
mutate (Ethnicity = "Hispanic or Latino") %>%
rename(N_Race_Ethnicity = "H_L"
, Pct_Ethnicity_Total = "Pct_of_H_L"
, Pct_US_Total = "Pct_H_L_of_US") %>%
mutate(Pct_US_Total = as.character(Pct_US_Total))
#get just not-hispanic records
eth_Not_Hispanic <- dataset2 %>%
select(Count_of_Races ,Race ,Not_H_L ,Pct_of_Not_H_L ,Pct_Not_H_L_of_US) %>%
mutate (Ethnicity = "Not Hispanic or Latino") %>%
rename(N_Race_Ethnicity = "Not_H_L"
, Pct_Ethnicity_Total = "Pct_of_Not_H_L"
, Pct_US_Total = "Pct_Not_H_L_of_US") %>%
mutate(Pct_US_Total = as.character(Pct_US_Total))
#get just "all ethnicities" records
eth_Total <- dataset2 %>%
select(Count_of_Races ,Race ,RaceTotal ,RacePct_ofEth ,RacePct_ofUS) %>%
mutate (Ethnicity = "All Ethnicities") %>%
rename(N_Race_Ethnicity = "RaceTotal"
, Pct_Ethnicity_Total = "RacePct_ofEth"
, Pct_US_Total = "RacePct_ofUS") %>%
mutate(Pct_US_Total = as.character(Pct_US_Total))
# union (i.e., append/stack) the three datasets together
dataset2_tidy <- union(eth_Total, eth_Hispanic)
dataset2_tidy <- union(dataset2_tidy, eth_Not_Hispanic)
dataset2_tidy %>%
group_by(Ethnicity) %>%
summarise(n = n())
#US grand total is already stored in us_gt
#get grand totals for each Ethnicity
eth_totals <- dataset2_tidy %>%
filter(Count_of_Races == "All races") %>%
rename(eth_Total = "N_Race_Ethnicity") %>%
select(Ethnicity, eth_Total)
#join ethnicity grand totals into dataset for calculations
dataset2_tidy <- left_join(dataset2_tidy, eth_totals, by = "Ethnicity")
#recalculate and stored pct columns
dataset2_tidy <- dataset2_tidy %>%
mutate(Pct_Ethnicity_Total = round(N_Race_Ethnicity/eth_Total*100, 2)) %>%
mutate(Pct_US_Total = round(N_Race_Ethnicity/us_gt*100, 2)) %>%
select(Ethnicity
, Count_of_Races
, Race
, N_Race_Ethnicity
, Pct_Ethnicity_Total
, Pct_US_Total) %>%
arrange(Ethnicity
, Count_of_Races
, Race)
dataset2_tidy %>%
filter(Ethnicity == "All Ethnicities")
fileLocation <- 'C:/Users/cbailey/Desktop/CUNY MSDS/607 Data Aquisition & Management/Week6/dataset3 - Poverty Counts.csv'
dataset3 <- read.table(file = fileLocation, header = TRUE, sep = ',')
names(dataset3)
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "Number", "N")
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "Number", "N")
names(dataset3) <- str_replace_all(names(dataset3), "Percent", "Pct")
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "Number", "N")
names(dataset3) <- str_replace_all(names(dataset3), "Percent", "Pct")
names(dataset3) <- str_replace_all(names(dataset3), "_Below", "")
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "Number", "N")
names(dataset3) <- str_replace_all(names(dataset3), "Percent", "Pct")
names(dataset3) <- str_replace_all(names(dataset3), "_Below", "")
names(dataset3) <- str_replace_all(names(dataset3), "_Margin_of_Error", "_MOE")
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "Number", "N")
names(dataset3) <- str_replace_all(names(dataset3), "Percent", "Pct")
names(dataset3) <- str_replace_all(names(dataset3), "_Below", "")
names(dataset3) <- str_replace_all(names(dataset3), "_Margin_of_Error", "_MOE")
names(dataset3) <- str_replace_all(names(dataset3), "Total", "Total_N")
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "Number", "N")
names(dataset3) <- str_replace_all(names(dataset3), "Percent", "Pct")
names(dataset3) <- str_replace_all(names(dataset3), "_Below", "")
names(dataset3) <- str_replace_all(names(dataset3), "_Margin_of_Error", "_MOE")
names(dataset3) <- str_replace_all(names(dataset3), "Total", "Total_N")
dataset3 <- dataset3 %>%
mutate(Characteristic = str_trim(Characteristic)) %>%
mutate(Characteristic = str_replace_all(Characteristic, "\\d", "")) %>%
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "Number", "N")
names(dataset3) <- str_replace_all(names(dataset3), "Percent", "Pct")
names(dataset3) <- str_replace_all(names(dataset3), "_Below", "")
names(dataset3) <- str_replace_all(names(dataset3), "_Margin_of_Error", "_MOE")
names(dataset3) <- str_replace_all(names(dataset3), "Total", "Total_N")
dataset3 <- dataset3 %>%
mutate(Characteristic = str_trim(Characteristic)) %>%
mutate(Characteristic = str_replace_all(Characteristic, "\\d", "")) %>%
names(dataset3)
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "Number", "N")
names(dataset3) <- str_replace_all(names(dataset3), "Percent", "Pct")
names(dataset3) <- str_replace_all(names(dataset3), "_Below", "")
names(dataset3) <- str_replace_all(names(dataset3), "_Margin_of_Error", "_MOE")
names(dataset3) <- str_replace_all(names(dataset3), "Total", "Total_N")
dataset3 <- dataset3 %>%
mutate(Characteristic = str_trim(Characteristic)) %>%
mutate(Characteristic = str_replace_all(Characteristic, "\\d", "")) %>%
#names(dataset3)
head(dataset3)
names(dataset3) <- str_replace_all(names(dataset3), "\\.", "_")
names(dataset3) <- str_replace_all(names(dataset3), "Poverty", "Pov")
names(dataset3) <- str_replace_all(names(dataset3), "Number", "N")
names(dataset3) <- str_replace_all(names(dataset3), "Percent", "Pct")
names(dataset3) <- str_replace_all(names(dataset3), "_Below", "")
names(dataset3) <- str_replace_all(names(dataset3), "_Margin_of_Error", "_MOE")
names(dataset3) <- str_replace_all(names(dataset3), "Total", "Total_N")
#names(dataset3)
head(dataset3)
a <- c(1, 2, 3)
b <- c(4, 5, 6)
rowbind(a, b)
rbind(a, b)
c <- rbind(a, b)
c
class(c)
c <- data.frame(c)
class(c)
c
data.frame(c, a, b)
data.frame(c, a$1, b$2)
a$1
a[,1]
a
a[1:2]
data.frame(c, a[1:2], b[1:2])
install.packages(XML)
install.packages("XML")
?readLines
?readHTMLTable
??readHTMLTable
?xml
?xmlToDataFrame
??xmlToDataFrame
install.packages("RJSONIO")
?write.csv
install.packages("HTTR")
install.packages("httr")
?lapply
?t
?do.call
?rbind.fill
?add_headers
library(httr)
?add_headers
?readLines
library(plyr)
?rbind.fill
?do.call
install.packages("rmongodb")
install.packages("RMongo")
packageurl <- 'https://cran.r-project.org/src/contrib/Archive/rmongodb/rmongodb_1.8.0.tar.gz'
install.packages(packageurl, contriburl=NULL, type="source")
packageurl <- "https://cran.r-project.org/src/contrib/Archive/rmongodb/rmongodb_1.8.0.tar.gz"
install.packages(packageurl, contriburl=NULL, type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/rmongodb/rmongodb_1.8.0.tar.gz"
install.packages(packageurl, contriburl=NULL, type="source")
setRepositories()
install.packages("rmongodb")
install.packages("RMongo")
setRepositories()
ap <- available.packages()
View(ap)
"rmongodb" %in% rownames(ap)
View(ap)
"RMongo" %in% rownames(ap)
install_version("rmongodb", "1.8.0")
library(remotes)
install.packages(remotes)
install.packages("remotes")
install_version("rmongodb", "1.8.0")
install_version("rmongodb", "1.8.0")
lsf.str(remotes)
library(remotes)
install_version("rmongodb", "1.8.0")
install_version("rmongodb", "1.8.0")
library(rmongodb)
install_github("cran/rmongodb")
install.packages("mongolite")
View(ap)
"mongo" %in% rownames(ap)
?readLines
install.packages("XLConnect")
library(XLConnect)
library(rJava)
install.packages("rJava")
library(rJava)
require(rJava)
require(XLConnect)
install.packages("rJava")
library(rJava)
library(rJava)
library(XLConnect)
library(XLConnectJars)
?loadWorkbook
fileLocation4 <- 'C:/Users/cbailey/Downloads/thresh16.csv'
povertyThresholds <- read.csv(filelation4, sep = ',')
fileLocation4 <- 'C:/Users/cbailey/Downloads/thresh16.csv'
povertyThresholds <- read.csv(filelation4, sep = ",")
fileLocation4 <- 'C:/Users/cbailey/Downloads/thresh16.csv'
povertyThresholds <- read.csv(fileLocation4, sep = ",")
povertyThresholds
povertyThreshold <- 24563
right("00000", "34", 5)
library(stringr)
?str_pad
str_pad(c("00000", "34", 5, "right")
str_pad(c("00000", "34", 5, "right"))
str_pad(c("00000", "34", 5, "right"))
str_pad(c("00000", "34"), 5, "right")
str_pad(paste("00000", "34", sep = ""), 5, "right")
str_trunc(paste("00000", "34", sep = ""), 5, "right")
str_trunc(paste("00000", "34", sep = ""), 5, "left")
x <- paste("00000", "34", sep = "")
x
str_trunc(x, 5, side = c("center", "right"))
str_trunc(x, 5, side = c("center"))
str_trunc(x, 5, side = c("right"))
str_trunc(x, 5, side = c("right"), ellipse = "")
str_trunc(x, 5, side = c("right"), ellipsis = "")
str_trunc(x, 5, side = c("left"), ellipsis = "")
?ggplot
?geom_point
??geom_point
tinytex:::is_tinytex() is TRUE
tinytex:::is_tinytex() == TRUE
install.packages('tinytex')
tinytex::install_tinytex()
tinytex:::is_tinytex() == TRUE
tinytex:::is_tinytex() == FALSE
tinytex:::is_tinytex()
install.packages('tinytex')
tinytex::install_tinytex()
tinytex::tinytex_root()
install.packages(c('openintro','OIdata','devtools','tidyverse', 'ggplot2',
'psych','reshape2','knitr','markdown','shiny','R.rsp',
'fivethirtyeight'))
devtools::install_github("jbryer/DATA606")
setwd('C:/Users/cbailey/Desktop/CUNY MSDS/606 Statistics and Probability/Week 04 & 05/Lab4'
)
getwd()
library(DATA606)
startLab('Lab4')
setwd('C:/Users/cbailey/Desktop/CUNY MSDS/606 Statistics and Probability/Week 04 & 05/Lab4')
